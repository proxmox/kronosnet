From 7eebe93c5039dad432bdd40101287e7fc04b3d10 Mon Sep 17 00:00:00 2001
From: "Fabio M. Di Nitto" <fdinitto@redhat.com>
Date: Mon, 8 Nov 2021 09:14:22 +0100
Subject: [PATCH 1/2] [host] fix dst_seq_num initialization race condition
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There is a potential race condition where the sender
is overloaded, sending data packets before pings
can kick in and set the correct dst_seq_num.

if this node is starting up (dst_seq_num = 0),
it can start rejecing valid packets and get stuck.

Set the dst_seq_num to the first seen packet and
use that as reference instead.

Signed-off-by: Fabio M. Di Nitto <fdinitto@redhat.com>
Signed-off-by: Fabian Gr√ºnbichler <f.gruenbichler@proxmox.com>
---
 libknet/host.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/libknet/host.c b/libknet/host.c
index ec73c0df..6fca01f8 100644
--- a/libknet/host.c
+++ b/libknet/host.c
@@ -573,6 +573,21 @@ int _seq_num_lookup(struct knet_host *host, seq_num_t seq_num, int defrag_buf, i
 	char *dst_cbuf_defrag = host->circular_buffer_defrag;
 	seq_num_t *dst_seq_num = &host->rx_seq_num;
 
+	/*
+	 * There is a potential race condition where the sender
+	 * is overloaded, sending data packets before pings
+	 * can kick in and set the correct dst_seq_num.
+	 *
+	 * if this node is starting up (dst_seq_num = 0),
+	 * it can start rejecing valid packets and get stuck.
+	 *
+	 * Set the dst_seq_num to the first seen packet and
+	 * use that as reference instead.
+	 */
+	if (!*dst_seq_num) {
+		*dst_seq_num = seq_num;
+	}
+
 	if (clear_buf) {
 		_clear_cbuffers(host, seq_num);
 	}
-- 
2.30.2

