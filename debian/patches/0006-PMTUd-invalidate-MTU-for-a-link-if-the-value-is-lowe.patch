From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Fabio M. Di Nitto" <fdinitto@redhat.com>
Date: Tue, 15 Oct 2019 11:53:56 +0200
Subject: [PATCH] [PMTUd] invalidate MTU for a link if the value is lower than
 minimum

Under heavy network load and packet loss, calculated MTU can be
too small. In that case we need to invalidate the link mtu,
that would remove the link from the rotation (and traffic) and
would give PMTUd time to get the right MTU in the next round.

Signed-off-by: Fabio M. Di Nitto <fdinitto@redhat.com>
(cherry picked from commit 34c08ae7e7903d79f06569b4f506a00c15af0238)
Signed-off-by: Thomas Lamprecht <t.lamprecht@proxmox.com>
---
 libknet/threads_pmtud.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/libknet/threads_pmtud.c b/libknet/threads_pmtud.c
index 75d5196..f4d15ae 100644
--- a/libknet/threads_pmtud.c
+++ b/libknet/threads_pmtud.c
@@ -482,7 +482,14 @@ static int _handle_check_pmtud(knet_handle_t knet_h, struct knet_host *dst_host,
 		}
 		dst_link->has_valid_mtu = 0;
 	} else {
-		dst_link->has_valid_mtu = 1;
+		if (dst_link->status.mtu < calc_min_mtu(knet_h)) {
+			log_info(knet_h, KNET_SUB_PMTUD,
+				 "Invalid MTU detected for host: %u link: %u mtu: %u",
+				 dst_host->host_id, dst_link->link_id, dst_link->status.mtu);
+			dst_link->has_valid_mtu = 0;
+		} else {
+			dst_link->has_valid_mtu = 1;
+		}
 		if (dst_link->has_valid_mtu) {
 			if ((saved_pmtud) && (saved_pmtud != dst_link->status.mtu)) {
 				log_info(knet_h, KNET_SUB_PMTUD, "PMTUD link change for host: %u link: %u from %u to %u",
